#!/usr/bin/with-contenv bash
set -e
set -u
set -o pipefail

# Paths
MDATAL=${MDATAL:-"/data/databases"}
DDATAL=${DDATAL:-"/data/dump"}
MCDDIR=${MCDDIR:-"/config/mariadb"}
MCFDIR=${MCFDIR:-"/config/mariadb/cnf.d"}
TCFDIR=${TCDDIR:-"/etc/mariadb.t.d"}
BDBDIR=${BDBDIR:-"/backup"}

#Database
DATABASES=${DATABASES:-""}
RIGHTS=${RIGHTS:-""}
LOGINS=${LOGINS:-""}

WAITS=${WAITS:-120}
DUMPS=${DUMPS:-3}

# Defaut swithces
LOWMEM=${LOWMEM:-"true"}
LIMIT=${LIMIT:-"false"}
TMPFS=${TMPFS:-"true"}
BACKUP=${BACKUP:-"false"}
INTERNAL=${INTERNAL:-"true"}
RESTORE=${RESTORE:-"true"}


. /opt/mariadb-support/lib/mariadbio.sh


if [ "${TMPFS}" = "true" ];then
  MDATAL="/tmpfs/databases"
fi

function stop_mariadb() {
  local internal_pid
  if [ "${INTERNAL}" = "true" ];then
       dump_mariadb "${DDATAL}" &
       internal_pid=$!
  fi
  if [ "${BACKUP}" = "true" ];then
       dump_mariadb "${BDBDIR}"
  fi
  wait ${internal_pid}
  echo "[INFO] Stopping mariadb system"
  mysqladmin shutdown
  EC=$?
  echo "[Info] mariadb done"
  if [ -r "${MCDDIR}/post.sh" ];then . "${MCDDIR}/post.sh";fi
  : > "${DDATAL}/.mariadb"
  echo -n "$MARIADB_PID" > /tmpfs/.mariadb_done
  exit ${EC}
}

function main() {
  mkdir -p "${DDATAL}"
  mkdir -p "$MCDDIR"
  mkdir -p "/data/dump"
  cp -vr "$TCFDIR/." "$MCFDIR/"
  rm "$MCFDIR/05-low-mem.cnf"
  echo "$MDATAL" >>"$MCFDIR/03-location.cnf"

  # Init mariadb
  if [ ! -d "$MDATAL" ]; then
     echo "[INFO] Create a new mariadb initial system in $MDATAL"
     mysql_install_db --user=root --datadir="$MDATAL" --skip-name-resolve --skip-test-db > /dev/null
     EXISTING="false"
  else
    echo "[INFO] Using existing mariadb system in $MDATAL"
    EXISTING="true"
  fi

  if [ -r "$MCDDIR/pre.sh" ];then
    . "$MCDDIR/pre.sh";
  fi

  # Start mariadb
  echo "[INFO] Start MariaDB No Networking"
  mysqld_safe --datadir="$MDATAL" --user=root --skip-log-bin --skip-networking < /dev/null &
  MARIADB_PID=$!
  wait_mariadb || true

  if [ "$EXISTING" = "true" ];then
    echo "[INFO] Check data integrity and fix corruptions"
    mysqlcheck --no-defaults --databases mysql --fix-db-names --fix-table-names || true
    mysqlcheck --no-defaults --databases mysql --check --check-upgrade --auto-repair || true
    mysqlcheck --no-defaults --all-databases --skip-database=mysql --fix-db-names --fix-table-names || true
    mysqlcheck --no-defaults --all-databases --skip-database=mysql --check --check-upgrade --auto-repair || true
    mysql_upgrade --silent
  else
    if [ "$RESTORE" = "true" ];then
	    restore_mariadb
    fi
  fi
  mysql -e "flush privileges;" || true
  mysqladmin flush-tables
  if [ -r "$MCDDIR/pre.sh" ];then
    mysql -e "flush privileges;" || true
    mysqladmin flush-tables
    . "$MCDDIR/private.sh";
  fi
  echo -n "$MARIADB_PID" > /tmpfs/.mariadb_configure
  #FIXME TIMEOUT
  wait $MARIADB_PID
  cp -vr "$TCFDIR/." "$MCFDIR/"

  echo "[INFO] Start MariaDB"
  mysqld_safe --datadir="$MDATAL" --user=root --skip-log-bin < /dev/null &
  MARIADB_PID=$!
  wait_mariadb
  echo -n "$MARIADB_PID" > /tmpfs/.mariadb_ready
  trap "stop_mariadb" SIGTERM SIGINT
  trap "" SIGHUP

  if [ -r "$MCDDIR/running.sh" ];then . "$MCDDIR/running.sh";fi

  wait "$MARIADB_PID"

  if [ -r "$MCDDIR/post.sh" ];then . "$MCDDIR/post.sh";fi
  echo -n "$MARIADB_PID" > /tmpfs/.mariadb_done
}

main
# vim: ft=sh
